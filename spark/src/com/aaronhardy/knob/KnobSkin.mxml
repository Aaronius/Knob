<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/halo">
	<fx:Metadata>
		[HostComponent("com.aaronhardy.knob.Knob")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				
				graphics.clear();
				// The number of ticks to display
				const NUM_TICKS:uint = 10;
				const TICK_COLOR:uint = 0xB8B8B8;
				
				var tickAngleInterval:Number = hostComponent.maxRotation / (NUM_TICKS - 1);
				var tickLength:Number = unscaledWidth / 2;
				
				for (var i:uint = 0; i < NUM_TICKS; i++)
				{
					var tickThickness:uint;
					
					// Make the min and max ticks a bit larger.
					if (i == 0 || i == NUM_TICKS - 1)
					{
						tickThickness = 3;
					} 
					else
					{
						tickThickness = 1;
					}
					
					graphics.lineStyle(tickThickness, TICK_COLOR, 1, false, 
						LineScaleMode.NORMAL, CapsStyle.NONE);
					var tickAngle:Number = toRadians(hostComponent.toStandardVector(
						i * tickAngleInterval));
					var tickX:Number = (unscaledWidth / 2) + 
						Math.cos(tickAngle) * tickLength;
					var tickY:Number = (unscaledHeight / 2) + 
						Math.sin(tickAngle) * tickLength;
					graphics.moveTo(unscaledWidth / 2, unscaledHeight / 2);
					graphics.lineTo(tickX, tickY); 
				}
			}
			
			/**
			 * Converts a number from degrees to radians.
			 */                
			protected function toRadians(value:Number):Number {
				return value * (Math.PI / 180);
			}
			
			/**
			 * Converts a number from radians to degrees. 
			 */            
			protected function toDegrees(value:Number):Number {
				return value * (180 / Math.PI);
			}
		]]>
	</fx:Script>
	
	<s:Button id="thumbPart" width="{width * .85}" height="{height * .85}"
			horizontalCenter="0" verticalCenter="0"
			focusEnabled="false" skinClass="com.aaronhardy.knob.KnobThumbSkin"/>
</s:SparkSkin>
